<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.feng.mapper.BlogMapper">
    <insert id="addBlog" parameterType="Blog">
insert into blog(id,title,author,create_time,views)
values(#{id},#{title},#{author},#{createtime},#{views})
</insert>
    <!--sql片段-->
    <sql id="iftile">
        <if test="title!=null">
          and   title=#{title}
        </if>
        <if test="author!=null">
            and   author=#{author}
        </if>
    </sql>
    <select id="getBlogIf" resultType="Blog">
     select * from blog where 1=1
     <include refid="iftile"></include>
   <!--  <if test="title!=null">
        and title=#{title}
     </if>
     <if test="author!=null">
       and author=#{author}
     </if>-->
    </select>



    <select id="getBlogwhere" resultType="Blog">
        select * from blog
        <where>
        <if test="title!=null">
              title=#{title}
        </if>
        <if test="author!=null">
           and   author=#{author}
        </if>
        </where>
    </select>
    <select id="getBlogchoose" resultType="Blog">
        select * from blog
        <where>
        <choose>
            <when test="title!=null">
                  title=#{title}
            </when>
            <when test="author!=null">
                  author=#{author}
            </when>
            <otherwise>
                views=#{views}
            </otherwise>
        </choose>
        </where>
    </select>
    <update id="upodateBlogset" parameterType="Blog">
          update blog
          <set>
              <if test="title!=null">
                  title=#{title},
              </if>
              <if test="author!=null">
               author=#{author}
              </if>
          </set>
          where id=#{id}
    </update>


    <select id="getBlogForeach" resultType="Blog">
        select * from blog
        <where>
            <!--
collection:指定输入对象中的集合属性
item:每次遍历生成的对象
open:开始遍历时的拼接字符串
close:结束时拼接的字符串
separator:遍历对象之间需要拼接的字符串
select * from blog where 1=1 and (id=1 or id=2 or id=3)
-->
            <foreach collection="titles"  item="title" open="and (" close=")" separator="or">
                title=#{title}
            </foreach>
        </where>
    </select>
</mapper>